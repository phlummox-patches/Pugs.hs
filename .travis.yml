language: c

# TODO: ensure that a source distribution
# (made with stack sdist) also builds properly,
# not just that a "git clone" does.

git:
  depth: 5

os: linux

cache:
  directories:
  - $HOME/.ghc
  - $HOME/.cabal
  - $HOME/.stack
  - $HOME/.local
  - $TRAVIS_BUILD_DIR/.stack-work
  - /home/travis/.ghc
  - /home/travis/.cabal
  - /home/travis/.stack
  - /home/travis/.local

matrix:
  include:

  # Cabal
  - env: BUILD=cabal GHCVER=8.0.1 CABALVER=2.2 HAPPYVER=1.19.5 ALEXVER=3.1.7
    compiler: ": #GHC 8.0.1"
    addons:
      {apt: {packages: [cabal-install-2.2,ghc-8.0.1,happy-1.19.5,alex-3.1.7,libperl-dev], sources: [hvr-ghc]}}

  # Stack lts-9
  - env: BUILD=stack STACK_RESOLVER="lts-9"
    compiler: ": #stack"
    addons:
      {apt: {packages: [libgmp-dev,libperl-dev], sources: [hvr-ghc]}}

  # Stack lts-11
  - env: BUILD=stack STACK_RESOLVER="lts-11"
    compiler: ": #stack"
    addons:
      {apt: {packages: [libgmp-dev,libperl-dev], sources: [hvr-ghc]}}

before_install:
  - |
    # Using compiler above sets CC to an invalid value, so unset it
    #set -x
    unset CC
    # stack prep
    mkdir -p "$HOME/.local/bin"
    export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$HOME/.local/bin:/opt/alex/$ALEXVER/bin:/opt/happy/$HAPPYVER/bin:$HOME/.cabal/bin:$PATH
    export LINUX64_STACK="https://github.com/commercialhaskell/stack/releases/download/v2.1.3/stack-2.1.3-linux-x86_64.tar.gz"
    travis_retry curl -L "${LINUX64_STACK}" | tar xz --wildcards --strip-components=1 -C $HOME/.local/bin '*/stack'

install:
  - |
    set -ex

    for cache_dir in $HOME/.ghc $HOME/.cabal $HOME/.stack $HOME/.local $TRAVIS_BUILD_DIR/.stack-work /home/travis/.ghc /home/travis/.cabal /home/travis/.stack /home/travis/.local; do
      if [ -d "$cache_dir" ] ; then
        du -smc $cache_dir;
      fi
    done

    case "$BUILD" in
      cabal)
        .travis-scripts/cabal-build.sh
      ;;
      stack)
        # build project with stack
        stack --version
        stack --resolver="$STACK_RESOLVER" ghc -- --version
        stack --resolver="$STACK_RESOLVER" setup
        # get appropriate stack.yaml
        if [ -f "stack-${STACK_RESOLVER}.yaml" ] ; then
          cp "stack-${STACK_RESOLVER}.yaml" stack.yaml
        else
          stack --resolver="${STACK_RESOLVER}" init
        fi
        stack build  --test --no-run-tests
      ;;
      *)
        echo unknown build tool!!
        exit 1
      ;;
    esac

script:
  - |
    case "$BUILD" in
      cabal)
        echo "TODO"
      ;;
      stack)
        stack --resolver="${STACK_RESOLVER}" test
      ;;
      *)
    esac

notifications:
  email: false

